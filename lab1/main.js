function getNumberOfLetter(let){
    if (let == 'ё') {
        return 6;
    }
    let startPos = 'а'.charCodeAt(0),
        currentPos = let.toLowerCase().charCodeAt(0);
    if (currentPos - startPos <= 5) {
        return (currentPos - startPos);
    }
    if (currentPos - startPos < 0) {
        return false;
    }
    return (currentPos - startPos) + 1;
}

function checkLettersOnLatin(str) {
    for (let i = 0; i < str.length; i++) {
        if (/[а-я]/i.test(str[i])) {
            continue
        } else {
            return false;
        }
    }
    return true;
}

const arr_letters = [
    ["а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я"],
    ["б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а"],
    ["в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б"],
    ["г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в"],
    ["д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г"],
    ["е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д"],
    ["ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е"],
    ["ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё"],
    ["з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж"],
    ["и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з"],
    ["й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и"],
    ["к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й"],
    ["л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к"],
    ["м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л"],
    ["н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м"],
    ["о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н"],
    ["п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о"],
    ["р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п"],
    ["с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р"],
    ["т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с"],
    ["у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т"],
    ["ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у"],
    ["х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф"],
    ["ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х"],
    ["ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц"],
    ["ш",   "щ",    "ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч"],
    ["щ",   "ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "ъ"],
    ["ъ",	"ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",    "ш",    "щ"],
    ["ы",	"ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ"],
    ["ь",	"э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы"],
    ["э",	"ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь"],
    ["ю",	"я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э"],
    ["я",	"а",	"б",	"в",	"г",	"д",	"е",	"ё",	"ж",	"з",	"и",	"й",	"к",	"л",	"м",	"н",	"о",	"п",	"р",	"с",	"т",	"у",	"ф",	"х",	"ц",	"ч",	"ш",    "щ",    "ъ",	"ы",	"ь",	"э",	"ю"]
];


document.addEventListener('DOMContentLoaded', () => {
    const text_encrypt = document.querySelector('.input-text');
    const key_encrypt = document.querySelector('.input-key');
    const btn_encrypt = document.querySelector('#encrypt');
    const btn_decrypt = document.querySelector('#decrypt');
    const text_change = document.querySelector('.output-change-text');



    btn_encrypt.addEventListener('click', () => {
        const text = text_encrypt.value.toLowerCase();
        const key = key_encrypt.value.toLowerCase();
        let new_key = '';
        let num = 0;
        let str = "";

        if (!checkLettersOnLatin(text)) {
            alert("Введите корректный текст, состоящий из русского алфавита!");
        } else if (!checkLettersOnLatin(key)) {
            alert("Введите корректный ключ, состоящий из русского алфавита!");
        } else if (text == "") {
            alert("Заполните поле текст");
        } else if (key == "") {
            alert("Заполните поле ключ");
        } else {
            if (text.length - key.length > 0) {
                for(let i = 0; i < text.length; i++) {
                    if (num == key.length) {
                        num = 0;
                    }
                    if (text[i] == ' ') {
                        new_key += ' ';
                        continue
                    }
                    new_key += key.charAt(num);
                    num++;
                }
            } else if (text.length - key.length < 0) {
                for(let i = 0; i < text.length; i++) {
                    new_key += key.charAt(i);
                }
            } else {
                new_key += key;
            }

            for (let i = 0; i < new_key.length; i++) {
                if (new_key[i] == ' ') {
                    str += ' ';
                    continue
                }
                row = getNumberOfLetter(new_key.charAt(i));
                col = getNumberOfLetter(text.charAt(i));
                str += arr_letters[row][col];
            }
            text_change.innerHTML = str;
        }

    })

    btn_decrypt.addEventListener('click', () => {

        const text = text_encrypt.value.toLowerCase();
        const key = key_encrypt.value.toLowerCase();
        let new_key = '';
        let num = 0;
        let str = "";

        if (!checkLettersOnLatin(text)) {
            alert("Введите корректный текст, состоящий из русского алфавита!");
        } else if (!checkLettersOnLatin(key)) {
            alert("Введите корректный ключ, состоящий из русского алфавита!");
        } else if (text == "") {
            alert("Заполните поле текст");
        } else if (key == "") {
            alert("Заполните поле ключ");
        } else {
            if (text.length - key.length > 0) {
                for(let i = 0; i < text.length; i++) {
                    if (num == key.length) {
                        num = 0;
                    }
                    if (text[i] == ' ') {
                        new_key += ' ';
                        continue
                    }
                    new_key += key.charAt(num);
                    num++;
                }
            } else if (text.length - key.length < 0) {
                for(let i = 0; i < text.length; i++) {
                    new_key += key.charAt(i);
                }
            } else {
                new_key += key;
            }

            for (let num=0; num < new_key.length;num++) {
                for (let i =0; i < arr_letters.length; i++) {
                    if (new_key[num] == ' ') {
                        str += " ";
                        continue
                    }
                    if (arr_letters[getNumberOfLetter(new_key.charAt(num))][i] == text.charAt(num)) {
                        str += arr_letters[0][i];
                    }
                }
            }
            text_change.innerHTML = str;
        }

    })
})